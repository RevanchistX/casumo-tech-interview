buildscript {
    ext {
        springBootVersion = '3.2.2'
        springDependencyManagementVersion = '1.1.4'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    group = 'com.casumo'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    archiveFileName = 'service.jar'
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:3.2.2"
    implementation "org.postgresql:postgresql"
    implementation "com.mysql:mysql-connector-j"
    implementation "org.projectlombok:lombok"
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

testing {
    suites {
        configureEach {
            useJUnitJupiter()
        }

        test {
            dependencies {
                implementation("org.springframework.boot:spring-boot-starter-test") {
                    exclude group: "org.junit.vintage", module: "junit-vintage-engine"
                }
            }
        }
    }
}



//as found on https://stackoverflow.com/a/45105685/2355642
task testPreview(type: Exec){
    dependsOn 'test'
    workingDir './build/reports/tests/test'
    commandLine 'cmd', '/c', 'start index.html'
}

task buildPreview(type: Exec){
    dependsOn 'build'
    workingDir './build/reports/tests/test'
    commandLine 'cmd', '/c', 'start index.html'
}